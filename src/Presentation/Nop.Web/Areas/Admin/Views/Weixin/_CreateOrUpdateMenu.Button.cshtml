@model MenuModel
<div class="panel-body">
    <p>
        @T("Admin.Weixin.Menus.Button.Hint")
    </p>
    @if (Model.Id > 0)
    {
    <div class="panel panel-default">

        <div class="panel-body">
            @await Html.PartialAsync("Table", new DataTablesModel
       {
           Name = "menubuttons-grid",
           UrlRead = new DataUrl("MenuButtonList", "Weixin", new RouteValueDictionary { [nameof(Model.MenuButtonSearchModel.MenuId)] = Model.MenuButtonSearchModel.MenuId }),
           UrlDelete = new DataUrl("MenuButtonDelete", "Weixin", null),
           Length = Model.MenuButtonSearchModel.PageSize,
           LengthMenu = Model.MenuButtonSearchModel.AvailablePageSizes,
           ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(MenuButtonModel.Name))
                    {
                        Title = T("Admin.Weixin.Menus.Button.Fields.Name").Text,
                        Render = new RenderCustom("renderColumnMenuName")
                    },
                    new ColumnProperty(nameof(MenuButtonModel.MenuButtonTypeNameString))
                    {
                        Title = T("Admin.Weixin.Menus.Button.Fields.MenuButtonTypeNameString").Text,
                    },
                    new ColumnProperty(nameof(MenuButtonModel.Published))
                    {
                        Title = T("Admin.Weixin.Menus.Button.Fields.Published").Text,
                        Width = "70",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Render = new RenderBoolean()

                    },
                    new ColumnProperty(nameof(MenuButtonModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName = NopColumnClassDefaults.Button
                    }
                }
       })
            <script>
                function renderColumnMenuName(data, type, row, meta) {
                    var textRenderer = $.fn.dataTable.render.text().display;
                    var url = '@Url.Action("MenuButtonEditPopup", "Weixin", new {btnId = "btnRefreshMenuButtons", formId = "menubutton-form" })' + '&Id=' + row.Id;

                    return '<a href="javascript:;" onclick="javascript:OpenWindow(\'' + url + '\', 800, 800, true); return false;">' + textRenderer(row.Name) + '</a>';
                }
            </script>
        </div>
        <div class="panel-footer">
            <button type="submit" id="btnAddNewMenuButton" onclick="javascript:OpenWindow('@(Url.Action("MenuButtonAddPopup", "Weixin", new {menuId = Model.Id, btnId = "btnRefreshMenuButtons", formId = "menubutton-form"}))', 800, 800, true); return false;" class="btn btn-primary">
                @T("Admin.Weixin.Menus.Buttons.AddNew")
            </button>
            <input type="submit" id="btnRefreshMenuButtons" style="display: none" />
            <script>
                $(document).ready(function () {
                    $('#btnRefreshMenuButtons').click(function () {
                        //refresh grid
                        updateTable('#menubuttons-grid');

                        //return false to don't reload a page
                        return false;
                    });
                });
            </script>
        </div>
    </div>
    }
    else
    {
        <div class="panel panel-default">
            <div class="panel-body">
                @T("Admin.Weixin.Menus.Button.SaveBeforeEdit")
            </div>
        </div>
    }
</div>