@model MenuSearchModel

@using Nop.Core.Domain.Weixin;

@{
    //page title
    ViewBag.PageTitle = T("Admin.Weixin.Menus").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Menus");
}

@{
    const string hideSearchBlockAttributeName = "MenuListPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

    <form asp-controller="Weixin" asp-action="MenuList" method="post">
        <div class="content-header clearfix">
            <h1 class="pull-left">
                @T("Admin.Weixin.Menus")
            </h1>
            <div class="pull-right">
                <a asp-action="MenuCreate" class="btn bg-blue">
                    <i class="fa fa-plus-square"></i>
                    @T("Admin.Common.AddNew")
                </a>
            </div>
        </div>

        <div class="content">
            <div class="form-horizontal">
                <div class="panel-group">
                    <div class="panel panel-default panel-search">
                        <div class="panel-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SeletedPersonalId" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-select asp-for="SeletedPersonalId" asp-items="Model.AvailablePersonals" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchSystemName " />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchSystemName " />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-7 col-md-offset-5">
                                        <button type="button" id="search-menus" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                            Name = "menus-grid",
                            UrlRead = new DataUrl("MenuList", "Weixin", null),
                            SearchButtonId = "search-menus",
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                                new FilterParameter(nameof(Model.SearchSystemName)),
                                new FilterParameter(nameof(Model.SeletedPersonalId)),
                            },
                            ColumnCollection = new List<ColumnProperty>
                            {
                                new ColumnProperty(nameof(MenuModel.Id))
                                {
                                    IsMasterCheckBox = true,
                                    Render = new RenderCheckBox("checkbox_menus"),
                                    ClassName =  NopColumnClassDefaults.CenterAll,
                                    Width = "50"
                                },
                                new ColumnProperty(nameof(MenuModel.Id))
                                {
                                    Title = T("Id#").Text
                                },
                                new ColumnProperty(nameof(MenuModel.MenuId))
                                {
                                    Title = T("菜单ID").Text
                                },
                                new ColumnProperty(nameof(MenuModel.SystemName))
                                {
                                    Title = T("菜单名称").Text,
                                },
                                new ColumnProperty(nameof(MenuModel.Personal))
                                {
                                    Title = T("个性化菜单").Text,
                                    Width = "70",
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Render = new RenderBoolean()
                                },
                                new ColumnProperty(nameof(MenuModel.DefaultMenu))
                                {
                                    Title = T("默认菜单").Text,
                                    Width = "70",
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Render = new RenderBoolean()
                                },
                                new ColumnProperty(nameof(MenuModel.Id))
                                {
                                    Title = T("发布").Text,
                                    Width = "100",
                                    Render = new RenderLink(new DataUrl("~/Admin/Weixin/MenuPublish", nameof(MenuModel.Id)))
                                },
                                new ColumnProperty(nameof(MenuModel.Id))
                                {
                                    Title = T("Admin.Common.Edit").Text,
                                    Width = "100",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderButtonEdit(new DataUrl("MenuEdit"))
                                }
                            }
                        })

                    </div>
                </div>
            </div>
        </div>
    </div>

</form>