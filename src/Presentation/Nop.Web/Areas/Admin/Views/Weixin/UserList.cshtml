@model UserSearchModel

@using System.Globalization;

@{
    //page title
    ViewBag.PageTitle = T("Admin.Weixin.Users").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Users list");
}

@{
    const string hideSearchBlockAttributeName = "UserListPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<form asp-controller="Weixin" asp-action="UserList" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Weixin.Users")
        </h1>
        <div class="pull-right">
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.WeixinUserListButtons })
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                        </div>
                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchUserNickName" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchUserNickName" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchUserRemark" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchUserRemark" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 col-md-offset-5">
                                    <button type="button" id="search-users" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">
                        @{
                            var gridModel = new DataTablesModel
                            {
                                Name = "users-grid",
                                UrlRead = new DataUrl("UserList", "Weixin", null),
                                SearchButtonId = "search-users",
                                Length = Model.PageSize,
                                LengthMenu = Model.AvailablePageSizes,
                                Filters = new List<FilterParameter>
                                {
                                    new FilterParameter(nameof(Model.SearchUserNickName)),
                                    new FilterParameter(nameof(Model.SearchUserRemark)),
                                }
                            };

                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.Id))
                            {
                                IsMasterCheckBox = true,
                                Render = new RenderCheckBox("checkbox_users"),
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Width = "30"
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.HeadImgUrl))
                            {
                                Title = T("Admin.Weixin.Users.Fields.HeadImgUrl").Text,
                                Width = "140",
                                Render = new RenderPicture()
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.NickName))
                            {
                                Title = T("Admin.Weixin.Users.Fields.NickName").Text
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.Province))
                            {
                                Title = T("Admin.Weixin.Users.Fields.Province").Text
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.City))
                            {
                                Title = T("Admin.Weixin.Users.Fields.City").Text
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.Subscribe))
                            {
                                Title = T("Admin.Weixin.Users.Fields.Subscribe").Text,
                                Width = "70",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.InBlackList))
                            {
                                Title = T("Admin.Weixin.Users.Fields.InBlackList").Text,
                                Width = "70",
                                ClassName = NopColumnClassDefaults.CenterAll,
                                Render = new RenderBoolean()
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.SubscribeTime))
                            {
                                Title = T("Admin.Weixin.Users.Fields.SubscribeTime").Text,
                                Render = new RenderDate()
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.UnSubscribeTime))
                            {
                                Title = T("Admin.Weixin.Users.Fields.UnSubscribeTime").Text,
                                Render = new RenderDate()
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.CreatTime))
                            {
                                Title = T("Admin.Weixin.Users.Fields.CreatTime").Text,
                                Render = new RenderDate()
                            });
                            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(UserModel.Id))
                            {
                                Title = T("Admin.Common.Edit").Text,
                                Width = "80",
                                ClassName = NopColumnClassDefaults.Button,
                                Render = new RenderButtonEdit(new DataUrl("UserEdit"))
                            });

                        }
                        @await Html.PartialAsync("Table", gridModel)
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>